{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","employeesList","querySelector","sortList","list","listOfEmployees","getEmployees","sort","a","b","salary","forEach","item","innerHTML","position","toFixed","replace","age","name","map","employee","textContent","trim","dataset","slice"],"mappings":";AAAA,aAsCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApCD,IAAMA,EAAYC,SAASC,iBAAiB,MACtCC,EAAgBF,SAASG,cAAc,MAI7C,SAASC,EAASC,GACVC,IAAAA,EAAkBC,EAAaF,GAErCC,EAAgBE,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEC,OAASF,EAAEE,SAE5CL,EAAgBM,QAAQ,SAAAC,GACtBX,EAAcY,WAEOD,uCAAAA,OAAAA,EAAKE,SACNF,6BAAAA,OAAAA,EAAKF,OAAOK,QAAQ,GAAGC,QAAQ,MAAO,KAC1CJ,yBAAAA,OAAAA,EAAKK,IAEfL,wBAAAA,OAAAA,EAAKM,KANX,uBAcJ,SAASZ,EAAaF,GAUbC,OATiB,EAAID,GAAMe,IAAI,SAAAC,GACpC,MAAA,CACEF,KAAME,EAASC,YAAYC,OAC3BR,SAAUM,EAASG,QAAQT,SAC3BJ,QAASU,EAASG,QAAQb,OAAOc,MAAM,GAAGR,QAAQ,KAAM,KACxDC,IAAKG,EAASG,QAAQN,OA5B5BhB,EAAcY,UAAY,GAoB1BV,EAASL","file":"main.44b90a82.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = document.querySelectorAll('li');\nconst employeesList = document.querySelector('ul');\n\nemployeesList.innerHTML = '';\n\nfunction sortList(list) {\n  const listOfEmployees = getEmployees(list);\n\n  listOfEmployees.sort((a, b) => b.salary - a.salary);\n\n  listOfEmployees.forEach(item => {\n    employeesList.innerHTML += `\n      <li\n        data-position=\"${item.position}\"\n        data-salary=\"$${item.salary.toFixed(3).replace(/\\./g, ',')}\"\n        data-age=\"${item.age}\"\n      >\n        ${item.name}\n    </li>\n    `;\n  });\n}\n\nsortList(employees);\n\nfunction getEmployees(list) {\n  const listOfEmployees = [...list].map(employee => (\n    {\n      name: employee.textContent.trim(),\n      position: employee.dataset.position,\n      salary: +employee.dataset.salary.slice(1).replace(/,/g, '.'),\n      age: employee.dataset.age,\n    }\n  ));\n\n  return listOfEmployees;\n};\n"]}